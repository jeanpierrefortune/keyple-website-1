@startuml
title
    Keyple Remote Plugin
    Public API (08/10/2020)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

package org.eclipse.keyple.core.seproxy {

    +abstract PluginFactory {
        ...
    }
    +interface Plugin {
        ...
    }
    +interface PoolPlugin extends Plugin {
        ...
    }
    +interface Reader {
        ...
    }

    package event {
        +interface ObservablePlugin extends Plugin {
            ...
        }
        +interface ObservableReader extends Reader {
                ...
        }
    }
}

package org.eclipse.keyple.plugin.remotese {

    package virtualse {

        ' Remote Handlers
            +interface "<< <back:#82E0AA>ObservablePlugin</back> >>\nRemoteServerPlugin" as RemoteServerPlugin {
                +RemoteServerReader getReader (String name)
                +void terminateService (\n    String virtualReaderName,\n    Object userOutputData,\n    boolean unregisterVirtualReader)
            }
            ' Remote Readers
            +interface "<< <back:#D0ECE7>Reader</back> >>\nRemoteServerReader" as RemoteServerReader {
                +String getServiceId ()
                +<T> T getUserInputData (Class<T> classOfT)
                +<T extends AbstractMatchingSe> T getInitialSeContent (\n    Class<T> classOfMatchingSe)
            }
            +interface "<< <back:#FDEBD0>ObservableReader</back> >>\nRemoteServerObservableReader" as RemoteServerObservableReader extends RemoteServerReader {
            }
            +interface "<< <back:#D2B4DE>Plugin</back> >>\nRemoteClientPlugin" as RemoteClientPlugin {
            }
            +interface "<< <back:#82E0AA>ObservablePlugin</back> >>\nRemoteClientObservablePlugin" as RemoteClientObservablePlugin extends RemoteClientPlugin {
            }
            +interface "<< <back:#AED6F1>PoolPlugin</back> >>\nRemotePoolClientPlugin" as RemotePoolClientPlugin {
            }

        package impl as virtualSeImpl {

            ' Factories
            +class "<< <back:#F5B7B1>PluginFactory</back> >>\nRemoteServerPluginFactory" as RemoteServerPluginFactory {
                + {static} NodeStep builder ()
            }
            +interface "NodeStep" as RemoteServerPluginFactoryNodeStep {
                + PluginObservationStep withAsyncNode (\n    KeypleServerAsync endpoint)
                + PluginObservationStep withSyncNode ()
            }
            +interface "PluginObserverStep" as RemoteServerPluginFactoryPluginObserverStep {
                + EventNotificationPoolStep withPluginObserver (\n    ObservablePlugin.PluginObserver observer)
            }
            +interface "EventNotificationPoolStep" as RemoteServerPluginFactoryEventNotificationPoolStep {
                + BuilderStep usingDefaultEventNotificationPool ()
                + BuilderStep usingEventNotificationPool (\n    ExecutorService eventNotificationPool)
            }
            +interface "BuilderStep" as RemoteServerPluginFactoryBuilderStep {
                + RemoteServerPluginFactory build ()
            }
            +class "<< <back:#F5B7B1>PluginFactory</back> >>\nRemoteClientPluginFactory" as RemoteClientPluginFactory {
                + {static} NodeStep builder ()
            }
            +interface "NodeStep" as RemoteClientPluginFactoryNodeStep {
                + AsyncNodePluginStep withAsyncNode (\n    KeypleClientAsync endpoint)
                + SyncNodePluginStep withSyncNode (\n    KeypleClientSync endpoint)
            }
            +interface "AsyncNodePluginStep" as RemoteClientPluginFactoryAsyncNodePluginStep {
                + AsyncNodePluginEventNotificationPoolStep withPluginObservation ()
                + AsyncNodeReaderStep withoutPluginObservation ()
            }
            +interface "AsyncNodePluginEventNotificationPoolStep" as RemoteClientPluginFactoryAsyncNodePluginEventNotificationPoolStep {
                + AsyncNodeReaderStep usingDefaultEventNotificationPool ()
                + AsyncNodeReaderStep usingEventNotificationPool (\n    ExecutorService eventNotificationPool)
            }
            +interface "AsyncNodeReaderStep" as RemoteClientPluginFactoryAsyncNodeReaderStep {
                + AsyncNodeReaderEventNotificationPoolStep withReaderObservation ()
                + BuilderStep withoutReaderObservation ()
            }
            +interface "AsyncNodeReaderEventNotificationPoolStep" as RemoteClientPluginFactoryAsyncNodeReaderEventNotificationPoolStep {
                + BuilderStep usingDefaultEventNotificationPool ()
                + BuilderStep usingEventNotificationPool (\n    ExecutorService eventNotificationPool)
            }
            +interface "SyncNodePluginStep" as RemoteClientPluginFactorySyncNodePluginStep {
                + ServerPushPluginEventStrategyStep withPluginObservation ()
                + SyncNodeReaderStep withoutPluginObservation ()
            }
            +interface "ServerPushPluginEventStrategyStep" as RemoteClientPluginFactoryServerPushPluginEventStrategyStep {
                + SyncNodePluginEventNotificationPoolStep usingPluginPollingStrategy (\n    int requestFrequencyInSeconds)
                + SyncNodePluginEventNotificationPoolStep usingPluginLongPollingStrategy (\n    int requestTimeoutInSeconds)
            }
            +interface "SyncNodePluginEventNotificationPoolStep" as RemoteClientPluginFactorySyncNodePluginEventNotificationPoolStep {
                + SyncNodeReaderStep usingDefaultEventNotificationPool ()
                + SyncNodeReaderStep usingEventNotificationPool (\n    ExecutorService eventNotificationPool)
            }
            +interface "SyncNodeReaderStep" as RemoteClientPluginFactorySyncNodeReaderStep {
                + ServerPushReaderEventStrategyStep withReaderObservation ()
                + BuilderStep withoutReaderObservation ()
            }
            +interface "ServerPushReaderEventStrategyStep" as RemoteClientPluginFactoryServerPushReaderEventStrategyStep {
                + SyncNodeReaderEventNotificationPoolStep usingReaderPollingStrategy (\n    int requestFrequencyInSeconds)
                + SyncNodeReaderEventNotificationPoolStep usingReaderLongPollingStrategy (\n    int requestTimeoutInSeconds)
            }
            +interface "SyncNodeReaderEventNotificationPoolStep" as RemoteClientPluginFactorySyncNodeReaderEventNotificationPoolStep {
                + BuilderStep usingDefaultEventNotificationPool ()
                + BuilderStep usingEventNotificationPool (\n    ExecutorService eventNotificationPool)
            }
            +interface "BuilderStep" as RemoteClientPluginFactoryBuilderStep {
                + RemoteClientPluginFactory build ()
            }
            +class "<< <back:#F5B7B1>PluginFactory</back> >>\nRemotePoolClientPluginFactory" as RemotePoolClientPluginFactory {
                + {static} NodeStep builder ()
            }
            +class "NodeStep" as RemotePoolClientPluginFactoryNodeStep {
                + BuilderStep withAsyncNode (\n    KeypleClientAsync endpoint)
                + BuilderStep withSyncNode (\n    KeypleClientSync endpoint)
            }
            +interface "BuilderStep" as RemotePoolClientPluginFactoryBuilderStep {
                + RemotePoolClientPluginFactory build ()
            }

            ' Utilitaires Master
            +class RemoteServerUtils {
                ____
                + {static} RemoteServerPlugin getAsyncPlugin ()
                + {static} KeypleServerAsyncNode getAsyncNode ()
                ....
                + {static} RemoteServerPlugin getSyncPlugin ()
                + {static} KeypleServerSyncNode getSyncNode ()
            }
            +class RemoteClientUtils {
                ____
                + {static} RemoteClientPlugin getAsyncPlugin ()
                + {static} RemoteClientObservablePlugin getAsyncObservablePlugin ()
                + {static} KeypleClientAsyncNode getAsyncNode ()
                ....
                + {static} RemoteClientPlugin getSyncPlugin ()
                + {static} RemoteClientObservablePlugin getSyncObservablePlugin ()
            }
            +class RemotePoolClientUtils {
                ____
                + {static} RemotePoolClientPlugin getAsyncPlugin ()
                + {static} KeypleClientAsyncNode getAsyncNode ()
                ....
                + {static} RemotePoolClientPlugin getSyncPlugin ()
            }

        }

    }

    package core {

        ' DTO
        +class KeypleMessageDto {
            + String sessionId
            + String action
            + String clientNodeId
            + String serverNodeId
            + String nativeReaderName
            + String virtualReaderName
            + String body
        }
        +interface KeypleClientReaderEventFilter {
            +Object beforePropagation (ReaderEvent event)
            +Class<? extends Object> getUserOutputDataClass ()
            +void afterPropagation (Object userOutputData)
        }

        ' Nodes & Senders
            +interface KeypleClientAsyncNode {
                +void onOpen (String sessionId)
                +void onMessage (KeypleMessageDto msg)
                +void onClose (String sessionId)
                +void onError (String sessionId, Throwable error)
            }
            +interface KeypleClientAsync {
                +void openSession (String sessionId)
                +void sendMessage (KeypleMessageDto msg)
                +void closeSession (String sessionId)
            }
            +interface KeypleServerAsyncNode {
                +void onMessage (KeypleMessageDto msg)
                +void onError (String sessionId, Throwable error)
            }
            +interface KeypleServerAsync {
                +void sendMessage (KeypleMessageDto msg)
            }
            +interface KeypleClientSyncNode {
            }
            +interface KeypleClientSync {
                +List<KeypleMessageDto> sendRequest (\n    KeypleMessageDto msg)
            }
            +interface KeypleServerSyncNode {
                +List<KeypleMessageDto> onRequest (\n    KeypleMessageDto msg)
            }

    }

    package nativese {

            +interface NativeClientService {
                +<T> T executeRemoteService (\n    RemoteServiceParameters parameters,\n    Class<T> classOfT)
            }
            +class RemoteServiceParameters {
                +{static} Builder builder (String serviceId, Reader nativeReader)
            }
            +class "Builder" as RemoteServiceParametersBuilder {
                +Builder withUserInputData (Object userInputData)
                +Builder withInitialSeContent (AbstractMatchingSe matchingSe)
                +RemoteServiceParameters build ()
            }
            +interface NativeServerService {
            }
            +interface NativePoolServerService {
            }

        package impl as nativeSeImpl {

            ' Factories
            +class NativeClientServiceFactory {
                + {static} NodeStep builder ()
            }
            +interface "NodeStep" as NativeClientServiceFactoryNodeStep {
                + ReaderStep withAsyncNode (KeypleClientAsync endpoint)
                + ReaderStep withSyncNode (KeypleClientSync endpoint)
            }
            +interface "ReaderStep" as NativeClientServiceFactoryReaderStep {
                + BuilderStep withReaderObservation (KeypleClientReaderEventFilter filter)
                + BuilderStep withoutReaderObservation ()
            }
            +interface "BuilderStep" as NativeClientServiceFactoryBuilderStep {
                + NativeClientService getService ()
            }
            +class NativeServerServiceFactory {
                + {static} NodeStep builder ()
            }
            +interface "NodeStep" as NativeServerServiceFactoryNodeStep {
                + BuilderStep withAsyncNode (KeypleServerAsync endpoint)
                + BuilderStep withSyncNode ()
            }
            +interface "BuilderStep" as NativeServerServiceFactoryBuilderStep {
                + NativeServerService getService ()
            }
            +class NativePoolServerServiceFactory {
                + {static} NodeStep builder ()
            }
            +interface "NodeStep" as NativePoolServerServiceFactoryNodeStep {
                + BuilderStep withAsyncNode (KeypleServerAsync endpoint)
                + BuilderStep withSyncNode ()
            }
            +interface "BuilderStep" as NativePoolServerServiceFactoryBuilderStep {
                + NativePoolServerService getService ()
            }

            ' Utilitaires Slave
            +class NativeClientUtils {
                + {static} NativeClientService getService ()
                + {static} KeypleClientAsyncNode getAsyncNode ()
            }
            +class NativeServerUtils {
                + {static} KeypleServerAsyncNode getAsyncNode ()
                + {static} KeypleServerSyncNode getSyncNode ()
            }
            +class NativePoolServerUtils {
                + {static} KeypleServerAsyncNode getAsyncNode ()
                + {static} KeypleServerSyncNode getSyncNode ()
            }

        }

    }

}

' Associations
RemoteServerPluginFactory ..> RemoteServerPluginFactoryNodeStep #C_USE
RemoteServerPluginFactoryNodeStep ..> RemoteServerPluginFactoryPluginObserverStep #C_USE
RemoteServerPluginFactoryPluginObserverStep ..> RemoteServerPluginFactoryEventNotificationPoolStep #C_USE
RemoteServerPluginFactoryEventNotificationPoolStep ..> RemoteServerPluginFactoryBuilderStep #C_USE

RemoteClientPluginFactory ..> RemoteClientPluginFactoryNodeStep #C_USE
RemoteClientPluginFactoryNodeStep ..> RemoteClientPluginFactoryAsyncNodePluginStep #C_USE
RemoteClientPluginFactoryAsyncNodePluginStep ..> RemoteClientPluginFactoryAsyncNodePluginEventNotificationPoolStep #C_USE
RemoteClientPluginFactoryAsyncNodePluginEventNotificationPoolStep ..> RemoteClientPluginFactoryAsyncNodeReaderStep #C_USE
RemoteClientPluginFactoryAsyncNodePluginStep ..> RemoteClientPluginFactoryAsyncNodeReaderStep #C_USE
RemoteClientPluginFactoryNodeStep ..> RemoteClientPluginFactorySyncNodePluginStep #C_USE
RemoteClientPluginFactorySyncNodePluginStep ..> RemoteClientPluginFactoryServerPushPluginEventStrategyStep #C_USE
RemoteClientPluginFactoryServerPushPluginEventStrategyStep ..> RemoteClientPluginFactorySyncNodePluginEventNotificationPoolStep #C_USE
RemoteClientPluginFactorySyncNodePluginStep ..> RemoteClientPluginFactorySyncNodeReaderStep #C_USE
RemoteClientPluginFactoryAsyncNodeReaderStep ..> RemoteClientPluginFactoryAsyncNodeReaderEventNotificationPoolStep #C_USE
RemoteClientPluginFactoryAsyncNodeReaderEventNotificationPoolStep ..> RemoteClientPluginFactoryBuilderStep #C_USE
RemoteClientPluginFactoryAsyncNodeReaderStep ..> RemoteClientPluginFactoryBuilderStep #C_USE
RemoteClientPluginFactorySyncNodePluginEventNotificationPoolStep ..> RemoteClientPluginFactorySyncNodeReaderStep #C_USE
RemoteClientPluginFactorySyncNodeReaderStep ..> RemoteClientPluginFactoryBuilderStep #C_USE
RemoteClientPluginFactorySyncNodeReaderStep ..> RemoteClientPluginFactoryServerPushReaderEventStrategyStep #C_USE
RemoteClientPluginFactoryServerPushReaderEventStrategyStep ..> RemoteClientPluginFactorySyncNodeReaderEventNotificationPoolStep #C_USE
RemoteClientPluginFactorySyncNodeReaderEventNotificationPoolStep ..> RemoteClientPluginFactoryBuilderStep #C_USE

RemotePoolClientPluginFactory ..> RemotePoolClientPluginFactoryNodeStep #C_USE
RemotePoolClientPluginFactoryNodeStep ..> RemotePoolClientPluginFactoryBuilderStep #C_USE

RemoteServerPlugin *--> "1..N" RemoteServerReader #C_LINK : readers

KeypleClientSyncNode --> KeypleClientSync #C_LINK : use >
KeypleClientAsyncNode --> KeypleClientAsync #C_LINK : use >
KeypleServerAsyncNode -up-> KeypleServerAsync #C_LINK : use >

NativeClientService ..> RemoteServiceParameters #C_USE : use >
RemoteServiceParameters +-- RemoteServiceParametersBuilder #C_LINK

NativeClientServiceFactory ..> NativeClientServiceFactoryNodeStep #C_USE
NativeClientServiceFactoryNodeStep ..> NativeClientServiceFactoryReaderStep #C_USE
NativeClientServiceFactoryReaderStep ..> NativeClientServiceFactoryBuilderStep #C_USE

NativeServerServiceFactory ..> NativeServerServiceFactoryNodeStep #C_USE
NativeServerServiceFactoryNodeStep ..> NativeServerServiceFactoryBuilderStep #C_USE

NativePoolServerServiceFactory ..> NativePoolServerServiceFactoryNodeStep #C_USE
NativePoolServerServiceFactoryNodeStep ..> NativePoolServerServiceFactoryBuilderStep #C_USE

' == LAYOUT ==

ObservableReader -[hidden]- RemoteServerPlugin

RemoteServerObservableReader -[hidden]- RemoteClientPlugin
RemoteClientObservablePlugin -[hidden]- RemotePoolClientPlugin

RemoteServerPluginFactoryBuilderStep -[hidden]- RemoteServerUtils
RemoteServerUtils -[hidden]- RemoteClientUtils
RemotePoolClientPluginFactoryBuilderStep -[hidden]- RemotePoolClientUtils

NativeClientServiceFactoryBuilderStep -[hidden]- NativeClientUtils
NativeServerServiceFactoryBuilderStep -[hidden]- NativeServerUtils
NativePoolServerServiceFactoryBuilderStep -[hidden]- NativePoolServerUtils

KeypleClientAsync -[hidden]- KeypleServerAsync
KeypleServerAsyncNode -[hidden]- KeypleMessageDto
KeypleMessageDto -[hidden]- KeypleClientReaderEventFilter
KeypleClientReaderEventFilter -[hidden]- KeypleClientSyncNode
KeypleClientSync -[hidden]- KeypleServerSyncNode

RemoteServiceParametersBuilder -[hidden]- NativeServerService
NativeServerService -[hidden]- NativePoolServerService

RemotePoolClientUtils -[hidden]- NativePoolServerServiceFactory
RemoteClientPluginFactoryBuilderStep -[hidden]- NativeServerServiceFactory
RemoteClientUtils -[hidden]- NativeClientServiceFactory

' == STYLE ==

package org.eclipse.keyple.core.seproxy #C_GREY1 {}
package event #C_GREY2 {}
package core #C_GREY1 {}
package nativese #C_GREY1 {}
package nativeSeImpl #C_GREY2 {}
package virtualse #C_GREY1 {}
package virtualSeImpl #C_GREY2 {}

abstract PluginFactory <<grey>> #F5B7B1
interface Plugin <<grey>> #D2B4DE
interface PoolPlugin <<grey>> #AED6F1
interface Reader <<grey>> #D0ECE7
interface ObservablePlugin <<grey>> #82E0AA
interface ObservableReader <<grey>> #FDEBD0

class RemoteServerUtils <<green>>
interface RemoteServerPlugin <<green>>
interface RemoteServerReader <<green>>
interface RemoteServerObservableReader <<green>>
class RemoteServerPluginFactory <<green>>
interface RemoteServerPluginFactoryNodeStep <<green>>
interface RemoteServerPluginFactoryPluginObserverStep <<green>>
interface RemoteServerPluginFactoryEventNotificationPoolStep <<green>>
interface RemoteServerPluginFactoryBuilderStep <<green>>
interface NativeClientService <<green>>
class NativeClientServiceFactory <<green>>
interface NativeClientServiceFactoryNodeStep <<green>>
interface NativeClientServiceFactoryReaderStep <<green>>
interface NativeClientServiceFactoryBuilderStep <<green>>
class RemoteServiceParameters <<green>>
class RemoteServiceParametersBuilder <<green>>
class NativeClientUtils <<green>>

class RemoteClientUtils <<purple>>
interface RemoteClientPlugin <<purple>>
class RemoteClientPluginFactory <<purple>>
interface RemoteClientPluginFactoryNodeStep <<purple>>
interface RemoteClientPluginFactoryAsyncNodePluginStep <<purple>>
interface RemoteClientPluginFactoryAsyncNodePluginEventNotificationPoolStep <<purple>>
interface RemoteClientPluginFactoryAsyncNodeReaderStep <<purple>>
interface RemoteClientPluginFactoryAsyncNodeReaderEventNotificationPoolStep <<purple>>
interface RemoteClientPluginFactorySyncNodePluginStep <<purple>>
interface RemoteClientPluginFactoryServerPushPluginEventStrategyStep <<purple>>
interface RemoteClientPluginFactorySyncNodePluginEventNotificationPoolStep <<purple>>
interface RemoteClientPluginFactorySyncNodeReaderStep <<purple>>
interface RemoteClientPluginFactoryServerPushReaderEventStrategyStep <<purple>>
interface RemoteClientPluginFactorySyncNodeReaderEventNotificationPoolStep <<purple>>
interface RemoteClientPluginFactoryBuilderStep <<purple>>
interface NativeServerService <<purple>>
class NativeServerServiceFactory <<purple>>
interface NativeServerServiceFactoryNodeStep <<purple>>
interface NativeServerServiceFactoryBuilderStep <<purple>>
class NativeServerUtils <<purple>>

interface RemoteClientObservablePlugin <<purple>>

class RemotePoolClientUtils <<blue>>
interface RemotePoolClientPlugin <<blue>>
class RemotePoolClientPluginFactory <<blue>>
interface RemotePoolClientPluginFactoryNodeStep <<blue>>
interface RemotePoolClientPluginFactoryBuilderStep <<blue>>
interface NativePoolServerService <<blue>>
class NativePoolServerServiceFactory <<blue>>
interface NativePoolServerServiceFactoryNodeStep <<blue>>
interface NativePoolServerServiceFactoryBuilderStep <<blue>>
class NativePoolServerUtils <<blue>>

KeypleClientSyncNode <<red>>
KeypleServerSyncNode <<red>>
KeypleClientAsyncNode <<red>>
KeypleServerAsyncNode <<red>>

KeypleMessageDto <<grey>>
KeypleClientReaderEventFilter <<grey>>

@enduml