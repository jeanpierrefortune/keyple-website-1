@startuml
title
    Keyple Remote Plugin - Native Service API - 1.0.0 (28/10/2020)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

package Legend {
    interface "**RemoteServerPlugin API**" as serverApi <<green>>
    interface "**RemoteClientPlugin API** or\n**RemoteClientObservablePlugin API**" as clientApi <<purple>>
    interface "**RemotePoolClientPlugin API**" as poolClientApi <<blue>>
    interface "**SPI** (Service Provider Interface)\nMust be implemented by the user" as spiApi
}

package "org.eclipse.keyple.plugin.remote.nativ" as native {

    +interface NativeClientService {
        +<T> T executeRemoteService (\n    RemoteServiceParameters parameters,\n    Class<T> classOfT)
    }
    +class RemoteServiceParameters {
        +{static} Builder builder (String serviceId, Reader nativeReader)
    }
    +class "Builder" as RemoteServiceParametersBuilder {
        +Builder withUserInputData (Object userInputData)
        +Builder withInitialCardContent (AbstractSmartCard smartCard)
        +RemoteServiceParameters build ()
    }
    +interface NativeServerService {
    }
    +interface NativePoolServerService {
    }
    package spi {
        +interface KeypleClientReaderEventFilter {
            +Object beforePropagation (ReaderEvent event)
            +Class<? extends Object> getUserOutputDataClass ()
            +void afterPropagation (Object userOutputData)
        }
    }
    package impl as nativeImpl {
        ' Utilitaires Slave
        +class NativeClientUtils {
            + {static} NativeClientService getService ()
            + {static} KeypleClientAsyncNode getAsyncNode ()
        }
        +class NativeServerUtils {
            + {static} KeypleServerAsyncNode getAsyncNode ()
            + {static} KeypleServerSyncNode getSyncNode ()
        }
        +class NativePoolServerUtils {
            + {static} KeypleServerAsyncNode getAsyncNode ()
            + {static} KeypleServerSyncNode getSyncNode ()
        }
        ' Factories
        +class NativeClientServiceFactory {
            + {static} NodeStep builder ()
        }
        +interface "NodeStep" as NativeClientServiceFactoryNodeStep {
            + TimeoutStep withAsyncNode (KeypleClientAsync endpoint)
            + ReaderStep withSyncNode (KeypleClientSync endpoint)
        }
        +interface "TimeoutStep" as NativeClientServiceFactoryTimeoutStep {
            + ReaderStep usingDefaultTimeout ()
            + ReaderStep usingCustomTimeout (int timeoutInSeconds)
        }
        +interface "ReaderStep" as NativeClientServiceFactoryReaderStep {
            + BuilderStep withReaderObservation (KeypleClientReaderEventFilter filter)
            + BuilderStep withoutReaderObservation ()
        }
        +interface "BuilderStep" as NativeClientServiceFactoryBuilderStep {
            + NativeClientService getService ()
        }
        +class NativeServerServiceFactory {
            + {static} NodeStep builder ()
        }
        +interface "NodeStep" as NativeServerServiceFactoryNodeStep {
            + BuilderStep withAsyncNode (KeypleServerAsync endpoint)
            + BuilderStep withSyncNode ()
        }
        +interface "BuilderStep" as NativeServerServiceFactoryBuilderStep {
            + NativeServerService getService ()
        }
        +class NativePoolServerServiceFactory {
            + {static} NodeStep builder ()
        }
        +interface "NodeStep" as NativePoolServerServiceFactoryNodeStep {
            + BuilderStep withAsyncNode (KeypleServerAsync endpoint)
            + BuilderStep withSyncNode ()
        }
        +interface "BuilderStep" as NativePoolServerServiceFactoryBuilderStep {
            + NativePoolServerService getService ()
        }
    }
}

' Associations
NativeClientService ..> RemoteServiceParameters #C_USE : use >
RemoteServiceParameters +-- RemoteServiceParametersBuilder #C_LINK

NativeClientServiceFactory ..> NativeClientServiceFactoryNodeStep #C_USE
NativeClientServiceFactoryNodeStep ..> NativeClientServiceFactoryTimeoutStep #C_USE
NativeClientServiceFactoryNodeStep ..> NativeClientServiceFactoryReaderStep #C_USE
NativeClientServiceFactoryTimeoutStep ..> NativeClientServiceFactoryReaderStep #C_USE
NativeClientServiceFactoryReaderStep ..> NativeClientServiceFactoryBuilderStep #C_USE

NativeServerServiceFactory ..> NativeServerServiceFactoryNodeStep #C_USE
NativeServerServiceFactoryNodeStep ..> NativeServerServiceFactoryBuilderStep #C_USE

NativePoolServerServiceFactory ..> NativePoolServerServiceFactoryNodeStep #C_USE
NativePoolServerServiceFactoryNodeStep ..> NativePoolServerServiceFactoryBuilderStep #C_USE

' == LAYOUT ==

serverApi -[hidden]- NativeClientService
clientApi -[hidden]- NativeServerService
poolClientApi -[hidden]- NativePoolServerService
spiApi -[hidden]- KeypleClientReaderEventFilter

RemoteServiceParametersBuilder -[hidden]- NativeClientUtils
NativeServerService -[hidden]- NativeServerUtils
NativePoolServerService -[hidden]- NativePoolServerUtils

NativeClientUtils -[hidden]- NativeClientServiceFactory
NativeServerUtils -[hidden]- NativeServerServiceFactory
NativePoolServerUtils -[hidden]- NativePoolServerServiceFactory

' == STYLE ==

package native #C_GREY1 {}
package spi #C_GREY2 {}
package nativeImpl #C_GREY2 {}

interface NativeClientService <<green>>
class NativeClientServiceFactory <<green>>
interface NativeClientServiceFactoryNodeStep <<green>>
interface NativeClientServiceFactoryTimeoutStep <<green>>
interface NativeClientServiceFactoryReaderStep <<green>>
interface NativeClientServiceFactoryBuilderStep <<green>>
class RemoteServiceParameters <<green>>
class RemoteServiceParametersBuilder <<green>>
class NativeClientUtils <<green>>

interface NativeServerService <<purple>>
class NativeServerServiceFactory <<purple>>
interface NativeServerServiceFactoryNodeStep <<purple>>
interface NativeServerServiceFactoryBuilderStep <<purple>>
class NativeServerUtils <<purple>>

interface NativePoolServerService <<blue>>
class NativePoolServerServiceFactory <<blue>>
interface NativePoolServerServiceFactoryNodeStep <<blue>>
interface NativePoolServerServiceFactoryBuilderStep <<blue>>
class NativePoolServerUtils <<blue>>

@enduml